// 변경사항 정리 //


///////////////


=== GET 형식 req 필요o ===

- /images/[image URL]
    ex.) localhost:54000/images/1624430805798_f5b9324a8a5b4c01977419a6e6442ab9.jpg
    ::: get 영화 poster img

- /movies/review?movie_id=[ 20191951 ]
    ::: get 영화 리뷰 가져오기 (like 순)

- /movies/search?text=[ 검색이름 ]
    ::: get 영화 검색결과 가져오기 ('text%' 로 가져옴)

- /movies/search/beta?title=[ 영화제목 ]&genore=[ 장르 ]&rated=[ 연령등급 ]&offset=[ 어디서 부터 ]&size=[ 얼마나 가져오는지 ]
    ::: get genore와 title과 rated로 맞는 영화의 검색결과 가져오기

        요청 시 [title 또는 genore 또는 rated]가 필수적으로 필요함 
        페이징 처리시 [offset(어디서 부터 가져올지) 와 size(행을 얼마나 가져올지)]값이 필요함 (선택)

ex. )     localhost:54000/movies/search?genore=코미&title=xx&offset=1&size=10 (순서 상관x)
          localhost:54000/movies/search/beta?title=xx&size=10&genore=코미&offset=0
          localhost:54000/movies/search/beta?title=블랙&offset=0&size=5
          localhost:54000/movies/search/beta?genore=사극&offset=0&size=5
          localhost:54000/movies/search/beta?rated=12세이상관람가&offset=0&size=5
          localhost:54000/movies/search/beta?title=베놈&genore=액션&rated=15세이상관람가&offset=0&size=5



- /users/search?title=[ 영화제목 ]&genore=[ 장르 ]&rated=[ 연령등급 ]&offset=[ 어디서 부터 ]&size=[ 얼마나 가져오는지 ]
    ::: 로그인된 유저가 작성한 리뷰의 영화들 중 get genore와 title과 rated로 맞는 영화의 검색결과 가져오기 

        사용방식은 "/movies/search/beta" 와 같음
        요청 시 [title 또는 genore 또는 rated]가 필수적으로 필요함 
        페이징 처리시 [offset(어디서 부터 가져올지) 와 size(행을 얼마나 가져올지)]값이 필요함 (선택)

ex. )     localhost:54000/users/search?genore=코미&title=xx&offset=1&size=10 (순서 상관x)
          localhost:54000/users/search/beta?title=xx&size=10&genore=코미&offset=0
          localhost:54000/users/search/beta?title=블랙&offset=0&size=5
          localhost:54000/users/search/beta?genore=사극&offset=0&size=5
          localhost:54000/users/search/beta?rated=12세이상관람가&offset=0&size=5
          localhost:54000/users/search/beta?title=베놈&genore=액션&rated=15세이상관람가&offset=0&size=5


=== GET 형식 req 필요x [페이징 값(offset, size)를 제외했을 때] ===
- /
    ::: 로그인 되어있는지 확인 
    ( 
        로그인 ON -> return session user 정보
        로그인 OFF -> return  {"result": 0}
    )

- /movies/rank
    ::: get 예매순 영화 가져오기 (상영중인 영화 정보 + 예매율 + graph)  -> score 갱신되는 것을 기준으로 구별
    
- /movies/rating
    ::: get 평점순 영화 가져오기 {상영중인 영화 정보 + review (rating_num 평균 높은 순) + graph 정보}

- /auth/logout
    ::: (GET) logout 요청 처리

- /users/review
    ::: (GET) 유저가 남긴 리뷰 + 해당 movie
    ex.)
        로그인 OFF -> return  {"result": 0}
        로그인 ON -> return 
        {
            "movies": [
                {
                    "movie_id": "19848168",
                    "title": "블러드 심플",
                    "eng_title": "Blood Simple",
                    "production_year": "1998",
                        -(생략)-
                }
            ],
            "reviews": [
                {
                    "idx": 2,
                    "movie_id": "19848168",
                    "site": "this",
                    "created": "2021-09-10 11:26:40",
                    "writer": "admin",
                    "comment": "text comment",
                    "like_num": 0,
                    "rating_num": 8
                }
            ]
        }

- /movies/genore
    ::: movie 가 가진 장르들 키워드를 return
    ex.) return {
            "keyword": ["SF", "가족", "공연",  "공포(호러)", "기타", ... , "판타지"]
        ]
    }
   
- /movies/keyword
    ::: 장르와 연령등급 키워드를 리턴(movies/genore와 합칠 에정) 
        movie 가 가진 장르들 키워드 or movie 가 가진 연령등급들 키워드 return
    ex.)
        localhost:54000/movies/keyword?key=genore 
        return {
            "keyword": ["SF", "가족", "공연",  "공포(호러)", "기타", ... , "판타지"]
        ]

        localhost:54000/movies/keyword?key=rated
        return { 
            "keywords": [  "12세관람가", "12세이상관람가",  "15세관람가",  "15세이상관람가", "전체관람가", "청소년관람불가"] 
            } 
        }

=== POST 형식 ===
- /auth/local
    ::: 로그인 부분 JSON 형식 or form-data 형식으로  
    id, pwd 필요 (이름을 지킬 것)
    

- /users/signup
    ::: 회원가입 부분 form-data 형식으로 
     id, name, pwd, img(file) 필요 (이름을 지킬 것)


=== PUT 형식 ===
- /movies/review/write
    ::: 리뷰 작성 하기 form-data 형식으로  
        movie_id, comment, rating_num(평점) 필요 (이름을 지킬 것)
    
    ex.) 로그인 OFF -> return  {"result": 0}
        로그인 ON -> return  { "result": true }

- /movies/review/edit
    ::: 리뷰 수정 하기 form-data 형식으로  
        idx, movie_id, comment, rating_num(평점) 필요 (이름을 지킬 것)

    ex.) 로그인 OFF -> return  {"result": 0}
        로그인 ON -> return  { "result": true }

- /movies/review/delete
    ::: 리뷰 삭제 하기 form-data 형식으로  
        idx, movie_id  필요 (이름을 지킬 것)

    ex.) 로그인 OFF -> return  {"result": 0}
        로그인 ON -> return  { "result": true }

==========================

1. npm i -g yarn
2. yarn install
3. ./public/images/uploads 폴더를 생성
3-1. 해당 폴더에 영화포스터 zip 파일 이곳에 풀기 or
    database 내 movie 테이블 비우고 4번 실행 (처음부터 새로 받기)
4. 영화 정보 업데이트
(node .\crawler\movieCrawler\movieCrawler.js)

