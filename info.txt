=== GET 형식 req 필요o ===
- 192.168.31.31:54000/movies/review?movie_id=[movie_id]
   ex.) 192.168.31.31:54000/movies/review?movie_id=20191951
   ::: movie_id 의 review GET (like 순)

- 192.168.31.31:54000/movies/genore?genore=[genore]
    ex.) 192.168.31.31:54000/movies/genore?genore=코미디
    ::: get 영화 정보 (장르 검색)

- 192.168.31.31:54000/images/[image URL]
    ex.) 192.168.31.31:54000/images/1624430805798_f5b9324a8a5b4c01977419a6e6442ab9.jpg
    ::: get 영화 poster

- 192.168.31.185:54000/movies/review?movie_id=[movie_id]
    ex.) 192.168.31.185:54000/movies/review?movie_id=20191951
    ::: get 영화 리뷰 가져오기

- http://617c-121-165-105-153.ngrok.io/movies/search?text=[ 검색이름 ]
    ex.) http://617c-121-165-105-153.ngrok.io/movies/search?text=블러드
    ::: get 영화 검색결과 가져오기 ( 'text%' 로 가져옴)

=== GET 형식 req 필요x ===
- 192.168.31.31:54000/movies/rank
    ::: get movie (상영중인 영화 정보 + 예매율 + graph)  -> score 갱신되는 것을 기준으로 구별
    
- 192.168.31.31:54000/movies/rating
    ::: get movie {상영중인 영화 정보 + review (rating_num 평균 높은 순) + graph 정보}

- http://617c-121-165-105-153.ngrok.io/auth/logout
    ::: (GET) logout 요청 처리



=== POST 형식 ===
- 192.168.31.33:54000/auth/local
    ::: 로그인 부분 JSON 형식으로  id, pwd 필요 (이름을 지킬 것)
    ex.) { "id":"test", "pwd":"1234" }

- 192.168.31.185:54000/users/signup
    ::: 회원가입 부분 form-data 형식으로  id, name, pwd, img(file) 필요 (이름을 지킬 것)

==========================

1. npm i -g yarn
2. yarn install
3. ./public/images/uploads 폴더를 생성
3-1. 해당 폴더에 영화포스터 zip 파일 이곳에 풀기 or
    database 내 movie 테이블 비우고 4번 실행 (처음부터 새로 받기)
4. 영화 정보 업데이트
(node .\crawler\movieCrawler\movieCrawler.js)