host => 192.168.31.31:54000 일때 기준

=== GET 형식 req 필요o ===
- 192.168.31.31:54000/movies/genore?genore=[ 코미디 ]
    ::: get 영화 장르 검색 가져오기 ('%genore%' 로 가져옴) 

- 192.168.31.31:54000/images/[image URL]
    ex.) 192.168.31.31:54000/images/1624430805798_f5b9324a8a5b4c01977419a6e6442ab9.jpg
    ::: get 영화 poster img

- 192.168.31.185:54000/movies/review?movie_id=[ 20191951 ]
    ::: get 영화 리뷰 가져오기 (like 순)

- 192.168.31.185:54000/movies/search?text=[ 검색이름 ]
    ::: get 영화 검색결과 가져오기 ('text%' 로 가져옴)

=== GET 형식 req 필요x ===
- 192.168.31.31:54000/
    ::: 로그인 되어있는지 확인 
    ( 
        로그인 ON -> return session user 정보
        로그인 OFF -> return  {"result": 0}
    )

- 192.168.31.31:54000/movies/rank
    ::: get movie (상영중인 영화 정보 + 예매율 + graph)  -> score 갱신되는 것을 기준으로 구별
    
- 192.168.31.31:54000/movies/rating
    ::: get movie {상영중인 영화 정보 + review (rating_num 평균 높은 순) + graph 정보}

- 192.168.31.31:54000/auth/logout
    ::: (GET) logout 요청 처리

- 192.168.31.31:54000/users/review
    ::: (GET) 유저가 남긴 리뷰 + 해당 movie
    ex.)
        로그인 OFF -> return  {"result": 0}
        로그인 ON -> return 
        {
            "movies": [
                {
                    "movie_id": "19848168",
                    "title": "블러드 심플",
                    "eng_title": "Blood Simple",
                    "production_year": "1998",
                        -(생략)-
                }
            ],
            "reviews": [
                {
                    "idx": 2,
                    "movie_id": "19848168",
                    "site": "this",
                    "created": "2021-09-10 11:26:40",
                    "writer": "admin",
                    "comment": "text comment",
                    "like_num": 0,
                    "rating_num": 8
                }
            ]
        }



=== POST 형식 ===
- 192.168.31.33:54000/auth/local
    ::: 로그인 부분 JSON 형식 or form-data 형식으로  id, pwd 필요 (이름을 지킬 것)
    ex.) { "id":"test", "pwd":"1234" }

- 192.168.31.185:54000/users/signup
    ::: 회원가입 부분 form-data 형식으로  id, name, pwd, img(file) 필요 (이름을 지킬 것)

- 192.168.31.185:54000/movies/review/write
    ::: 리뷰 작성 하기 form-data 형식으로  
        movie_id, writer(user Table의 id), comment, rating_num(평점) 필요 (이름을 지킬 것)

- 192.168.31.185:54000/movies/review/edit
    ::: 리뷰 수정 하기 form-data 형식으로  
        idx, movie_id, writer(user Table의 id), comment, rating_num(평점) 필요 (이름을 지킬 것)

- 192.168.31.185:54000/movies/review/delete
    ::: 리뷰 삭제 하기 form-data 형식으로  
        idx, movie_id, writer(user Table의 id) 필요 (이름을 지킬 것)

==========================

1. npm i -g yarn
2. yarn install
3. ./public/images/uploads 폴더를 생성
3-1. 해당 폴더에 영화포스터 zip 파일 이곳에 풀기 or
    database 내 movie 테이블 비우고 4번 실행 (처음부터 새로 받기)
4. 영화 정보 업데이트
(node .\crawler\movieCrawler\movieCrawler.js)